// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.workercapital.service.impl;

import com.workercapital.domain.Survey;
import com.workercapital.repository.SurveyRepository;
import com.workercapital.service.api.SurveyService;
import com.workercapital.service.impl.SurveyServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect SurveyServiceImpl_Roo_Service_Impl {
    
    declare parents: SurveyServiceImpl implements SurveyService;
    
    declare @type: SurveyServiceImpl: @Service;
    
    declare @type: SurveyServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     */
    private SurveyRepository SurveyServiceImpl.surveyRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param surveyRepository
     */
    @Autowired
    public SurveyServiceImpl.new(SurveyRepository surveyRepository) {
        this.surveyRepository = surveyRepository;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param survey
     */
    @Transactional
    public void SurveyServiceImpl.delete(Survey survey) {
        surveyRepository.delete(survey);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Survey> SurveyServiceImpl.save(Iterable<Survey> entities) {
        return surveyRepository.save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void SurveyServiceImpl.delete(Iterable<Long> ids) {
        List<Survey> toDelete = surveyRepository.findAll(ids);
        surveyRepository.deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Survey
     */
    @Transactional
    public Survey SurveyServiceImpl.save(Survey entity) {
        return surveyRepository.save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Survey
     */
    public Survey SurveyServiceImpl.findOne(Long id) {
        return surveyRepository.findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Survey> SurveyServiceImpl.findAll(Iterable<Long> ids) {
        return surveyRepository.findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Survey> SurveyServiceImpl.findAll() {
        return surveyRepository.findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long SurveyServiceImpl.count() {
        return surveyRepository.count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Survey> SurveyServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return surveyRepository.findAll(globalSearch, pageable);
    }
    
}
